diff --git a/ha_mroonga.cpp b/ha_mroonga.cpp
index f1947f7..09ea00a 100644
--- a/ha_mroonga.cpp
+++ b/ha_mroonga.cpp
@@ -5216,6 +5216,7 @@ int ha_mroonga::storage_write_row(uchar *buf)
 {
   MRN_DBUG_ENTER_METHOD();
   int error = 0;
+  uint rollback_max_key = 0;
 
   if (is_dry_write()) {
     DBUG_PRINT("info", ("mroonga: dry write: ha_mroonga::%s", __FUNCTION__));
@@ -5224,7 +5225,6 @@ int ha_mroonga::storage_write_row(uchar *buf)
 
   THD *thd = ha_thd();
   int i;
-  uint j;
   int n_columns = table->s->fields;
 
   if (table->next_number_field && buf == table->record[0])
@@ -5306,8 +5306,12 @@ int ha_mroonga::storage_write_row(uchar *buf)
     DBUG_RETURN(error);
   }
 
+  rollback_max_key = table->s->keys - 1;
   if ((error = storage_write_row_unique_indexes(buf)))
   {
+    if (error == HA_ERR_FOUND_DUPP_KEY) {
+      rollback_max_key = dup_key - 1;
+    }
     goto err;
   }
 
@@ -5401,7 +5405,8 @@ int ha_mroonga::storage_write_row(uchar *buf)
   DBUG_RETURN(0);
 
 err:
-  for (j = 0; j < table->s->keys; j++) {
+  uint j;
+  for (j = 0; j < rollback_max_key; j++) {
     if (j == pkey_nr) {
       continue;
     }
@@ -5580,7 +5585,16 @@ int ha_mroonga::storage_write_row_unique_indexes(uchar *buf)
     mrn_change_encoding(ctx, NULL);
     do {
       i--;
+
+      if (i == table->s->primary_key) {
+        continue;
+      }
+
       KEY *key_info = &table->key_info[i];
+      if (!(key_info->flags & HA_NOSAME)) {
+        continue;
+      }
+
       if (key_info->flags & HA_NOSAME) {
         grn_table_delete_by_id(ctx, grn_index_tables[i], key_id[i]);
       }
diff --git a/mysql-test/mroonga/storage/index/unique/r/search_after_duplicated.result b/mysql-test/mroonga/storage/index/unique/r/search_after_duplicated.result
new file mode 100644
index 0000000..1d9d5fb
--- /dev/null
+++ b/mysql-test/mroonga/storage/index/unique/r/search_after_duplicated.result
@@ -0,0 +1,18 @@
+DROP TABLE IF EXISTS users;
+CREATE TABLE users (
+id int PRIMARY KEY,
+name varchar(100) NOT NULL,
+UNIQUE KEY (name)
+) DEFAULT CHARSET=utf8;
+INSERT INTO users VALUES (1, "Alice");
+INSERT INTO users VALUES (2, "Bob");
+INSERT INTO users VALUES (3, "Bob");
+ERROR 23000: Duplicate entry 'Bob' for key 'name'
+SELECT * FROM users;
+id	name
+1	Alice
+2	Bob
+SELECT * FROM users WHERE name = "Bob";
+id	name
+2	Bob
+DROP TABLE users;
diff --git a/mysql-test/mroonga/storage/index/unique/t/search_after_duplicated.test b/mysql-test/mroonga/storage/index/unique/t/search_after_duplicated.test
new file mode 100644
index 0000000..aab419f
--- /dev/null
+++ b/mysql-test/mroonga/storage/index/unique/t/search_after_duplicated.test
@@ -0,0 +1,40 @@
+# Copyright(C) 2015 Kouhei Sutou  <kou@clear-code.com>
+#
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+#
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+--source ../../../../include/mroonga/have_mroonga.inc
+
+--disable_warnings
+DROP TABLE IF EXISTS users;
+--enable_warnings
+
+CREATE TABLE users (
+  id int PRIMARY KEY,
+  name varchar(100) NOT NULL,
+  UNIQUE KEY (name)
+) DEFAULT CHARSET=utf8;
+
+INSERT INTO users VALUES (1, "Alice");
+
+INSERT INTO users VALUES (2, "Bob");
+-- error ER_DUP_ENTRY
+INSERT INTO users VALUES (3, "Bob");
+
+SELECT * FROM users;
+SELECT * FROM users WHERE name = "Bob";
+
+DROP TABLE users;
+
+--source ../../../../include/mroonga/have_mroonga_deinit.inc
